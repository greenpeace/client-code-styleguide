!function(a,b,c){"use strict";var d=a.p3||{},e={emailField:"#UserEmail",identifyUserBy:"email",registrationFields:"#action-form-register",exceptionFields:"#action-form-message, #action-smallprints",signerCheckURL:"https://www.greenpeace.org/api/public/pledges/signercheck.json",validationRulesURL:"https://www.greenpeace.org/api/p3/pledge/config.json",animationDuration:350,fallbackHTML5:!1,params:{},messageElement:'<div class="message"></div>'};d.pledge_with_email_only=function(f,g){var h=a.extend(!0,e,g||{}),i=a(f),j=i.is("form")?i:a("form",i),k=a(h.emailField),l=a("input[type=submit]",j),m=!0,n=a.p3.request(h.signerCheckURL),o={url:n.url,parameters:a.extend(!0,n.parameters,h.params)},p=function(){if(o.parameters.page===c)throw new Error("Page identifier not found")},q=function(){switch(h.identifyUserBy){case"email":o.parameters.user=k.val();break;case"uuid":throw new Error("uuid not implemented");default:throw new Error("config.identifyUserBy: "+h.identifyUserBy+" invalid")}},r=function(){o.parameters.expiry===c&&console.log("WARNING: No expiry date set")},s=function(){l.prop("disabled","disabled").addClass("disabled"),a.getJSON(o.url,o.parameters,function(b){if(setTimeout(function(){l.removeProp("disabled").removeClass("disabled")},250),"success"===b.status)return!0;if(b.errors.pledge){var c=k.parents(".input.email:first"),d=a(".message",c);return d.length||(c.append(h.messageElement),d=a(".message",c)),d.append('<span class="error" for="'+k.attr("id")+'">'+b.errors.pledge.unique+"</span>"),k.addClass("error"),!1}return m=!1,t(b),!1}).error(function(){throw new Error("Signer API request failed")})},t=function(b){var c=a(h.messageElement);a.each(b.errors,function(b,d){switch(b){case"user":a(h.registrationFields).prepend(h.messageElement),a.each(d,function(b,d){var e=a("."+b,j),f=a(".message",e),g=a("input",e);f.length||(e.append(c),f=a(".message",e)),f.html('<span class="error" for="'+g.attr("id")+'">'+d+"</span>"),g.addClass("error").removeProp("disabled"),e.addClass("error").show(h.animationDuration)}),a(".input.error:first input").focus();break;case"pledge":console.log("Pledge already signed!");break;default:throw new Error("Unhandled error type: "+b)}})},u=function(){a(h.registrationFields+" > :not("+h.exceptionFields+", #action-submit-full)").hide().find("input").prop("disabled","disabled"),p(),r(),a.p3.validation(j,{jsonURL:h.validationRulesURL,params:o.parameters,submitHandler:function(a){return q(),m?s():(a.submit(),void 0)},fallbackHTML5:h.fallbackHTML5})};b.load({test:window.JSON,nope:["js/v03/lib/json.min.js"],complete:function(){u()}}),a.p3=d}}(jQuery,Modernizr);